# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import prediction_server_pb2 as proto_dot_prediction__server__pb2


class PredictionServerStub(object):
  """On any input that is documented to expect a string parameter in
  snake_case or kebab-case, either of those cases is accepted.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Predict = channel.unary_unary(
        '/io.modeld.api.PredictionServer/Predict',
        request_serializer=proto_dot_prediction__server__pb2.PredictionRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.PredictionResponse.FromString,
        )
    self.BatchPredict = channel.unary_unary(
        '/io.modeld.api.PredictionServer/BatchPredict',
        request_serializer=proto_dot_prediction__server__pb2.BatchPredictRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.BatchPredictResponse.FromString,
        )
    self.Alive = channel.unary_unary(
        '/io.modeld.api.PredictionServer/Alive',
        request_serializer=proto_dot_prediction__server__pb2.AliveRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.AliveResponse.FromString,
        )
    self.Ready = channel.unary_unary(
        '/io.modeld.api.PredictionServer/Ready',
        request_serializer=proto_dot_prediction__server__pb2.ReadyRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.ReadyResponse.FromString,
        )
    self.GetProduct = channel.unary_unary(
        '/io.modeld.api.PredictionServer/GetProduct',
        request_serializer=proto_dot_prediction__server__pb2.GetProductRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.GetProductResponse.FromString,
        )
    self.GetSchema = channel.unary_unary(
        '/io.modeld.api.PredictionServer/GetSchema',
        request_serializer=proto_dot_prediction__server__pb2.GetSchemaRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.GetSchemaResponse.FromString,
        )
    self.GetDataset = channel.unary_unary(
        '/io.modeld.api.PredictionServer/GetDataset',
        request_serializer=proto_dot_prediction__server__pb2.GetDatasetRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.GetDatasetResponse.FromString,
        )
    self.GetModel = channel.unary_unary(
        '/io.modeld.api.PredictionServer/GetModel',
        request_serializer=proto_dot_prediction__server__pb2.GetModelRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.GetModelResponse.FromString,
        )
    self.GetStat = channel.unary_unary(
        '/io.modeld.api.PredictionServer/GetStat',
        request_serializer=proto_dot_prediction__server__pb2.GetStatRequest.SerializeToString,
        response_deserializer=proto_dot_prediction__server__pb2.GetStatResponse.FromString,
        )


class PredictionServerServicer(object):
  """On any input that is documented to expect a string parameter in
  snake_case or kebab-case, either of those cases is accepted.
  """

  def Predict(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchPredict(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Alive(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ready(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetProduct(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSchema(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDataset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetModel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PredictionServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Predict': grpc.unary_unary_rpc_method_handler(
          servicer.Predict,
          request_deserializer=proto_dot_prediction__server__pb2.PredictionRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.PredictionResponse.SerializeToString,
      ),
      'BatchPredict': grpc.unary_unary_rpc_method_handler(
          servicer.BatchPredict,
          request_deserializer=proto_dot_prediction__server__pb2.BatchPredictRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.BatchPredictResponse.SerializeToString,
      ),
      'Alive': grpc.unary_unary_rpc_method_handler(
          servicer.Alive,
          request_deserializer=proto_dot_prediction__server__pb2.AliveRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.AliveResponse.SerializeToString,
      ),
      'Ready': grpc.unary_unary_rpc_method_handler(
          servicer.Ready,
          request_deserializer=proto_dot_prediction__server__pb2.ReadyRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.ReadyResponse.SerializeToString,
      ),
      'GetProduct': grpc.unary_unary_rpc_method_handler(
          servicer.GetProduct,
          request_deserializer=proto_dot_prediction__server__pb2.GetProductRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.GetProductResponse.SerializeToString,
      ),
      'GetSchema': grpc.unary_unary_rpc_method_handler(
          servicer.GetSchema,
          request_deserializer=proto_dot_prediction__server__pb2.GetSchemaRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.GetSchemaResponse.SerializeToString,
      ),
      'GetDataset': grpc.unary_unary_rpc_method_handler(
          servicer.GetDataset,
          request_deserializer=proto_dot_prediction__server__pb2.GetDatasetRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.GetDatasetResponse.SerializeToString,
      ),
      'GetModel': grpc.unary_unary_rpc_method_handler(
          servicer.GetModel,
          request_deserializer=proto_dot_prediction__server__pb2.GetModelRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.GetModelResponse.SerializeToString,
      ),
      'GetStat': grpc.unary_unary_rpc_method_handler(
          servicer.GetStat,
          request_deserializer=proto_dot_prediction__server__pb2.GetStatRequest.FromString,
          response_serializer=proto_dot_prediction__server__pb2.GetStatResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.modeld.api.PredictionServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
